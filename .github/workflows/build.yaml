name: Cross-Platform Go Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger the workflow on tag push matching v*, e.g., v1.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.4]
        os: [linux, darwin, windows]
        arch: [amd64] 

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code
      uses: actions/checkout@v2

    - name: Build
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -v -o keycloak-api-cli-${{ matrix.os }}-${{ matrix.arch }} .
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: keycloak-api-cli-${{ matrix.os }}-${{ matrix.arch }}
        path: keycloak-api-cli-${{ matrix.os }}-${{ matrix.arch }}

  create-release:
      needs: build
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        run: |
          for file in artifacts/*; do
            if [ -f "$file" ]; then
              echo "Uploading $file"
              asset_name=$(basename "$file")
              curl \
                -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Content-Type: $(file -b --mime-type "$file")" \
                --data-binary @"$file" \
                "${{ steps.create_release.outputs.upload_url }}?name=$asset_name"
            fi
          done


