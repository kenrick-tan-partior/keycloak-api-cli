name: Cross-Platform Go Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger the workflow on tag push matching v*, e.g., v1.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.4]
        os: [linux, darwin, windows]
        arch: [amd64] 

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}

    - name: Check out code
      uses: actions/checkout@v2

    - name: Build
      run: |
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -v -o keycloak-api-cli-${{ matrix.os }}-${{ matrix.arch }} .
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: keycloak-api-cli-${{ matrix.os }}-${{ matrix.arch }}
        path: keycloak-api-cli-${{ matrix.os }}-${{ matrix.arch }}

  create-release:
      needs: build
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2
      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          RELEASE_NAME="Release $TAG_NAME"
          RELEASE_BODY=$(git log ${TAG_NAME}..HEAD --pretty=format:"%h - %s" | tr "\n" "\\n")
          POST_DATA=$(printf '{
            "tag_name": "%s",
            "target_commitish": "main",
            "name": "%s",
            "body": "%s",
            "draft": false,
            "prerelease": false
          }' "$TAG_NAME" "$RELEASE_NAME" "$RELEASE_BODY")
          curl \
            -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$POST_DATA" \
            "https://api.github.com/repos/${{ github.repository }}/releases"

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          # Assuming the tag name is set correctly
          TAG_NAME=$(git describe --tags --abbrev=0)
          RELEASE_ID=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME" \
            | jq -r .id)
          # Upload each artifact file as a release asset
          for artifact in keycloak-api-cli-*; do
            echo "Uploading $artifact as a release asset"
            curl \
              -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @$artifact \
              "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=$(basename $artifact)"
          done


